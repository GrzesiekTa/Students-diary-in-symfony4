{% extends 'base.html.twig' %}

{% block title %}Dziennik - zarządzanie{% endblock %}

{% block body %}

    <section class="container text-center">
        <h3>{{ calendar.getMonth }} <b>{{ calendar.getYear }}</b></h3>
        <div class="row">
            <div class="col-lg-6">
                <a class="btn btn-outline-primary"
                   href="{{ path('diary_by_data', {'year': calendar.navData.preYearNumber,'month': calendar.navData.preMonthNumber}) }}">Poprzedni
                    miesiac</a>
            </div>
            <div class="col-lg-6">
                <a class="btn btn-outline-primary"
                   href="{{ path('diary_by_data', {'year': calendar.navData.nextYearNumber,'month': calendar.navData.nextMonthNumber}) }}">Następny
                    miesiac</a>
            </div>
        </div>
        <br>
        <div class="alert alert-success alert-dismissible fixed-top" style="display:none" id="alert">
            <strong>Success!</strong> Zapisałem zmiany
        </div>
    </section>
    <section class="table-responsive text-center">
        <h6>*aby zmienić status kliknij dwa razy na dany dzień</h6>
        <table class="table table-dark text-center">
            <colgroup>
                <col class=""/>
                {% for day in 1..daysInMonth %}
                    {% if calendar.showDay(day)=='Sat' or calendar.showDay(day)=='Sun' %}
                        <col class="grey"/>
                    {% else %}
                        <col class=""/>
                    {% endif %}
                {% endfor %}
            </colgroup>
            <thead>
            <tr>
                <th></th>
                {% for day in 1..daysInMonth %}
                    <th scope="col">{{ calendar.showDay(day) }}</th>
                {% endfor %}
            </tr>
            <tr>
                <th scope="col">Uczeń</th>
                {% for day in 1..daysInMonth %}
                    <th scope="col">{{ day }}</th>
                {% endfor %}
            </tr>
            </thead>

            <tbody>
            {% for student in students %}
                <tr>
                    <th scope="row"
                        style="background-color:white;color: black">{{ student.firstname }} {{ student.lastname }}</th>
                    {% for day in 1..daysInMonth %}
                        <td class="toMouseOver">
                            <p id="{{ calendar.getYear ~ '_' ~  calendar.getMonth  ~ '_' ~  day ~ '_' ~  student.id }}">
                                <span class="color_1">p</span></p>
                            <form style="display: none;" method="post" action="{{ path('edit_diary') }}">
                                <input type="hidden" value="{{ student.id }}" name="student">
                                <input type="hidden" value="{{ calendar.getYear }}" name="year">
                                <input type="hidden" value="{{ calendar.getMonth }}" name="month">
                                <input type="hidden" value="{{ day }}" name="day">
                                <select class="changeStatus form-control" name="status">
                                    {% for status in statuses %}
                                        <option value="{{ status.id }}"
                                                attr-sort="{{ status.shortName }}">{{ status.name }}</option>
                                    {% endfor %}
                                </select>
                            </form>
                        </td>
                    {% endfor %}
                </tr>
            {% endfor %}
            </tbody>
        </table>
    </section>


{% endblock %}

{% block stylesheets %}
    <style type="text/css">
        .toMouseOver p {
            font-weight: 900
        }

        .grey {
            background-color: grey
        }

        .color_1 {
            color: black;
        }

        .color_2 {
            color: green;
        }

        .color_3 {
            color: red;
        }

        .color_4 {
            color: yellow;
        }

        .table td, .table th {
            padding: .25rem;
        }

        .toMouseOver {
            cursor: pointer;
        }

        .toMouseOver select {
            width: 125px;
        }
    </style>
{% endblock %}

{% block javascripts %}
    <script type="text/javascript">

        document.querySelectorAll('.toMouseOver').forEach(function (item) {
            item.onmouseleave = function (event) {
                event.target.querySelector('form').style.display = "none";
            };

            item.addEventListener("dblclick", function (event) {
                this.querySelector('form').style.display = "block";
            });
        });


        document.querySelectorAll('.changeStatus').forEach(function (item) {
            item.onchange = function (event) {

                const student = this.parentElement.querySelector('input[name$="student"]').value;
                const year = this.parentElement.querySelector('input[name$="year"]').value;
                const month = this.parentElement.querySelector('input[name$="month"]').value;
                const day = this.parentElement.querySelector('input[name$="day"]').value;
                const status = this.value;

                const urlUpdate = this.parentElement.action;
                //get short text attribute
                const changeText = this.options[this.selectedIndex].getAttribute('attr-sort');
                //ajax post insert/update request
                fetch(urlUpdate, {
                    method: 'post',
                    body: JSON.stringify({student: student, year: year, month: month, day: day, status: status})
                })
                    .then(res => res.json())
                    .then(res => {
                        console.log(res);
                        this.parentElement.parentElement.querySelector('p').innerHTML = setColor(status, changeText);
                        document.querySelector('#alert').style.display = "block";
                        setTimeout(function () {
                            document.querySelector('#alert').style.display = "none";
                        }, 2000);
                    })
                    .catch(error => alert('Ups cos poszło nie tak spróbuj ponownie za chwile'))
            };
        });


        function setColor($number, changeText) {
            switch ($number) {
                case '1':
                    return `<span class="color_1">${changeText}</span>`;
                    break;
                case '2':
                    return `<span class="color_2">${changeText}</span>`;
                    break;
                case '3':
                    return `<span class="color_3">${changeText}</span>`;
                    break;
                case '4':
                    return `<span class="color_4">${changeText}</span>`;
                    break;
                default:
                    return changeText;
            }
        }

        function getDiaryDataByMonthYear() {
            const url = "{{ path('get_diary_data',{'year': calendar.getYear,'month':calendar.getMonth}) }}";
            fetch(url, {method: 'GET'})
                .then(res => res.json())
                .then(res => {
                    parseData(res);
                })
                .catch(error => alert('Ups cos poszło nie tak spróbuj ponownie za chwile'));
        }

        function parseData(data) {
            data['result'].forEach(function (item, key) {
                let dataTime = new Date(item.date);
                let dataMonth = dataTime.getMonth() + 1
                let dataDay = dataTime.getDate()
                let dataYear = dataTime.getFullYear()
                let dataId = dataYear + '_' + dataMonth + '_' + dataDay + '_' + item.student.id;
                let parseDataElement = document.getElementById(dataId);
                if (parseDataElement) {
                    //change message
                    parseDataElement.innerHTML = `<span class="color_${item.status.id}">${item.status.shortName}</span>`;
                    //select status
                    parseDataElement.parentElement.querySelector('.changeStatus').value = item.status.id;
                }
            });
        }

        document.addEventListener('DOMContentLoaded', function () {
            getDiaryDataByMonthYear();
        });

    </script>
{% endblock %}